services:
  client-frontend:
    image: frontend:0.0.1
    build: ./OnlineShop.Client
    restart: always
    container_name: frontend
    ports:
      - "3002:3001"
    volumes:
      - /app/node_modules
      - ./frontend:/app
  nginx:
    image: nginx:alpine
    container_name: nginx-app
    ports:
      - "3001:3001"
    depends_on:
      - client-frontend

  service-db:
    image: postgres:14.7-alpine
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "-A md5"
    ports:
      - "5432:5432"
    volumes:
      - ./infrastructure/db/1_create_db.sql:/docker-entrypoint-initdb.d/1_create_db.sql
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready'" ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    restart: unless-stopped

  client-backend:
    image: client:0.0.1
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8181:8080"
    depends_on:
      service-db:
        condition: service_healthy

#  pgadmin:
#    container_name: pgadmin4_container
#    image: dpage/pgadmin4:7
#    restart: always
#    environment:
#      PGADMIN_DEFAULT_EMAIL: admin@admin.com
#      PGADMIN_DEFAULT_PASSWORD: root
#    ports:
#      - "5050:80"